parameters:
  - name: stageName
    type: string
    default: none
  - name: stageDisplayname
    type: string
    default: none
  - name: runStage
    type: boolean
    default: true
  # - name: dependsOn
  #   default: []
  - name: jobName
    type: string
    default: none
  - name: jobDisplayname
    type: string
    default: none
  - name: vmImage
    type: string
    default: windows-2022
  - name: jobcondition
    type: string
    default: ''
  - name: jobDemand
    type: string
    default: ''

    stages:
      - stage: ${{ parameters.stageName }}
        condition: ${{ parameters.runStage }}
        dependsOn: []
        displayName: ${{ parameters.stageDisplayname }}
        jobs:
        - job: ${{ parameters.jobName }}
          timeoutInMinutes: 0
          cancelTimeoutInMinutes: 1
          condition: ${{ parameters. jobcondition}}
          displayName: ${{ parameters.jobDisplayname }}

          variables:
            TemplateS3Namespace: '/image-cd-pipeline'

          pool:
            vmImage: ${{ parameters.vmImage }}
            demands: ${{ parameters.jobDemand }}

          steps:
          - download: _BuildCloudAccountIdArtefacts
            displayName: Download artifacts from Build Cloud Account Id Artefacts

          - download: _BuildImageReleaseArtefacts
            displayName: Download artifacts from Build Image Release Artefacts 2.0

          - checkout: self

          - checkout: _LansaAWSTemplates
            displayName: Checkout nkhl-accolite/aws-templates-nkhl

          - checkout: _Robe070Cookbooks
            displayName: Checkout nkhl-accolite/cookbooks

          - task: PowerShell@2
            displayName: 'Artifact Check : Set Gate Variable'
            inputs:
              targetType: filePath
              filePath: './$(System.DefaultWorkingDirectory)/_robe070_cookbooks/scripts/azure_set_gate_variable_cloud_account_id.ps1'
              arguments: '-Version "$(System.JobDisplayName)" -osName "Windows Server 2019"'
              
          #Your build pipeline references an undefined variable named ‘Gate.IsEnabled’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
          #Your build pipeline references an undefined variable named ‘Gate.Version’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
          #Your build pipeline references an undefined variable named ‘Gate.VersionClean’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
          #Your build pipeline references an undefined variable named ‘Gate.ImageUrl’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
          #Your build pipeline references an undefined variable named ‘Gate.osName’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
          #Your build pipeline references an undefined variable named ‘Gate.Sku’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972

          - powershell: |
            # Print the Gate variables.
            Write-Host "Gate.IsEnabled: $(Gate.IsEnabled)"
            Write-Host "Gate.Version: $(Gate.Version)"
            Write-Host "Gate.VersionClean: $(Gate.VersionClean)"
            Write-Host "Gate.ImageUrl: $(Gate.ImageUrl)"
            Write-Host "Gate.osName: $(Gate.osName)"
            Write-Host "Gate.Sku: $(Gate.Sku)"
            
            displayName: 'Artifact Check : Output Gate Variable'
            condition: and(succeeded(), eq(variables['Gate.IsEnabled'], 'True'))

          - task: AzurePowerShell@5
        displayName: 'Delete Resource Group'
        inputs:
          azureSubscription: 'Azure Baking Images'
          ScriptType: InlineScript
          Inline: |
          Write-Host "Deleting Resource Group $(Gate.StackName)"
          Remove-AzResourceGroup -Name $(Gate.StackName) -Force
          errorActionPreference: silentlyContinue
          azurePowerShellVersion: LatestVersion
        condition: and(succeeded(), eq(variables['Gate.IsEnabled'], 'True'))

          #Your build pipeline references an undefined variable named ‘Gate.StackName’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
    #Your build pipeline references an undefined variable named ‘Gate.osName’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
    #Your build pipeline references an undefined variable named ‘Gate.ImageUrl’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
    #Your build pipeline references an undefined variable named ‘msiURLv15’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
    #Your build pipeline references an undefined variable named ‘Gate.VersionClean’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
    #Your build pipeline references an undefined variable named ‘certificateBase64Encoded’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
    #Your build pipeline references an undefined variable named ‘certificatePassword’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
    #Your build pipeline references an undefined variable named ‘databaseLogin’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
    #Your build pipeline references an undefined variable named ‘databaseLoginPassword’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
    #Your build pipeline references an undefined variable named ‘adminUsername’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
    #Your build pipeline references an undefined variable named ‘adminPassword’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
    #Your build pipeline references an undefined variable named ‘webUsername’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
    #Your build pipeline references an undefined variable named ‘webPassword’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972

    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      displayName: 'Deploy ARM Template '
      inputs:
        azureResourceManagerConnection: 
        subscriptionId: '739c4e86-bd75-4910-8d6e-d7eb23ab94f3'
        resourceGroupName: '$(Gate.StackName)'
        location: 'Australia East'
        csmFile: '$(System.DefaultWorkingDirectory)/_lansa_azure-quickstart-templates/lansa-vmss-windows-autoscale-sql-database/mainTemplate.json'
        overrideParameters: '-osName "$(Gate.osName)" -lansaVersion "V15 GA" -imageId "$(Gate.ImageUrl)" -imageSource "Custom" -msiURL $(msiURLv15) -stackName "$(Gate.VersionClean)" -certificateBase64Encoded "$(certificateBase64Encoded)" -certificatePassword "$(certificatePassword)" -databaseLogin "$(databaseLogin)" -databaseLoginPassword "$(databaseLoginPassword)" -adminUsername "$(adminUsername)" -adminPassword "$(adminPassword)" -webUsername "$(webUsername)" -webPassword "$(webPassword)" -gitBranch "debug/paas"'
        deploymentName: CustomTestTemplate
        deploymentOutputs: deploymentOutput
        addSpnToEnvironment: true
      condition: and(succeeded(), eq(variables['Gate.IsEnabled'], 'True'))

        
    - task: AzureResourceManagerTemplateDeployment@3
      displayName: 'Deploy ARM Template '
      inputs:
        azureResourceManagerConnection: 'Azure Baking Images'
        subscriptionId: '739c4e86-bd75-4910-8d6e-d7eb23ab94f3'
        resourceGroupName: '$(Gate.StackName)'
        location: 'Australia Southeast'
        csmFile: '$(System.DefaultWorkingDirectory)/_lansa_azure-quickstart-templates/lansa-vmss-windows-autoscale-sql-database/mainTemplate.json'
        overrideParameters: '-osName "$(Gate.osName)" -lansaVersion "V15 GA" -imageId "$(Gate.ImageUrl)" -imageSource "Custom" -msiURL $(msiURLv15) -stackName "$(Gate.VersionClean)" -certificateBase64Encoded "$(certificateBase64Encoded)" -certificatePassword "$(certificatePassword)" -databaseLogin "$(databaseLogin)" -databaseLoginPassword "$(databaseLoginPassword)" -adminUsername "$(adminUsername)" -adminPassword "$(adminPassword)" -webUsername "$(webUsername)" -webPassword "$(webPassword)" -gitBranch "debug/paas"'
        deploymentName: CustomTestTemplate
        deploymentOutputs: deploymentOutput
        addSpnToEnvironment: true
      condition: and(succeeded(), eq(variables['Gate.IsEnabled'], 'True'))

          
    - task: maikvandergaag.maikvandergaag-azurergtag.azurergtag.azurergtag@1
      displayName: 'Azure Resource Group Tagging'
      inputs:
        ConnectedServiceName: 'Azure Baking Images'
        ResourceGroupName: '$(Gate.StackName)'
        Key: Usage
        Value: 'test-temp'
      continueOnError: true
      condition: and(succeeded(), eq(variables['Gate.IsEnabled'], 'True'))
      
        #Your build pipeline references an undefined variable named ‘deploymentOutput’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972

    - powershell: |
      # Print the Deployment Output
      Write-Host "$(deploymentOutput)" | out-default | Write-Verbose
      displayName: 'Print Deployment Output'
      condition: and(succeeded(), eq(variables['Gate.IsEnabled'], 'True'))

      #Your build pipeline references an undefined variable named ‘deploymentOutput’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972

    - task: PowerShell@2
      displayName: 'Test ARM Deployment : URL Tests'
      inputs:
        targetType: filePath
        filePath: './$(System.DefaultWorkingDirectory)/_robe070_cookbooks/scripts/azure_url_tests.ps1'
        arguments: '-deploymentOutput ''$(deploymentOutput)'''
      condition: and(succeeded(), eq(variables['Gate.IsEnabled'], 'True'))

      #Your build pipeline references an undefined variable named ‘Gate.StackName’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972

    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      displayName: 'Delete Resource Group'
      inputs:
        azureResourceManagerConnection: 
        subscriptionId: '739c4e86-bd75-4910-8d6e-d7eb23ab94f3'
        action: DeleteRG
        resourceGroupName: '$(Gate.StackName)'
      continueOnError: true
      condition: and(succeeded(), eq(variables['Gate.IsEnabled'], 'True'))
      timeoutInMinutes: 240
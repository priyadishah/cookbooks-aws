parameters:
  - name: stageName
    type: string
    default: none
  - name: stageDisplayname
    type: string
    default: none
  - name: dependsOn
    default: []
  - name: jobName
    type: string
    default: none
  - name: jobDisplayname
    type: string
    default: none
  - name: vmImage
    type: string
    default: Windows-2022
  - name: jobcondition
    type: string
    default: none
  - name: stackName
    type: string
    default: ''
  - name: SqlDeploymentName
    type: string
    default: deploymentName
  - name: resourceGroup
    type: string
    default: none
  - name: version
    type: string
    default: none
  - name: osName
    type: string
    default: none
  - name: lansaVersion 
    type: string
    default: none
  - name: requestedServiceObjectiveName  
    type: string
    default: S2
  - name: msiURL  
    type: string
    default: none
  - name: databaseNewOrExisting
    type: string
    default: new
  - name: applicationGatewaySkuTier
    type: string
    default: Standard_v2
  - name: applicationGatewaySkuName
    type: string
    default: Standard_v2
  - name: imageReleaseState
    type: string
    default: Production
  - name: virtualMachineSize
    type: string
    default: ''
  - name: dbVirtualMachineSize
    type: string
    default: ''
  - name: keyVaultEnabled
    type: string
    default: 'false'
  - name: edition  
    type: string
    default: Standard
  - name: serverlessDbCapacity
    type: number
    default: 1
  - name: dbMinCapacity
    type: string
    default: ''
  - name: maxSizeBytes
    type: string
    default: ''
  - name: applicationGatewayCapacity
    type: number
    default: 2
  - name: gitBranch
    type: string
    default: support/scalable
  - name: enableAutoscaling
    type: boolean
    default: true
  - name: autoScaleMinCapacity
    type: string
    default: ''
  - name: autoScaleMaxCapacity
    type: string
    default: ''
  - name: databaseName
    type: string
    default: lansa
  - name: agpublicIpSku
    type: string
    default: Standard
  - name: agpublicIpAllocationMethod
    type: string
    default: "Static"
  - name: location
    type: string
    default: Australia East

stages:
  - stage: ${{ parameters.stageName }}
    dependsOn: '${{ parameters.dependsOn }}'
    displayName: ${{ parameters.stageDisplayname }}

    jobs:
    - job: ${{ parameters.jobName }}
      timeoutInMinutes: 120
      variables:
        - name: ResourceGroup
          value: ${{ parameters.resourceGroup }}
        - name: ConnectedServiceName
          value: 'Azure Baking Images'
        - name: CollationJPN
          ${{ if contains(parameters.osName, 'JPN') }}: 
            value: -collation "$(Collation_JPN)"
          ${{ else }}:
            value: ''
        - name: LanguageJPN
          ${{ if contains(parameters.osName, 'JPN') }}: 
            value: -Language "$(jpnLanguage)"
          ${{ else }}:
            value: ''
        - name: additionalOverrideParameters
          ${{ if eq(parameters.stageName, 'AUSDevShoe_WithKeyVaultCert_Sizesw19d150') }}: 
            value: '-virtualMachineSize "${{ parameters.virtualMachineSize }}" -dbVirtualMachineSize "${{ parameters.dbVirtualMachineSize }}" -keyVaultEnabled "${{ parameters.keyVaultEnabled }}" -serverlessDbCapacity ${{ parameters.serverlessDbCapacity }} -dbMinCapacity "${{ parameters.dbMinCapacity }}" -maxSizeBytes "${{ parameters.maxSizeBytes }}" -applicationGatewayCapacity "${{ parameters.applicationGatewayCapacity }}"'
          ${{ elseif eq(parameters.stageName, 'AUSTestShoe_WithKeyVaultCert_Sizesw16142j') }}:
            value: '-virtualMachineSize "${{ parameters.virtualMachineSize }}" -dbVirtualMachineSize "${{ parameters.dbVirtualMachineSize }}" -keyVaultEnabled "${{ parameters.keyVaultEnabled }}" -serverlessDbCapacity ${{ parameters.serverlessDbCapacity }} -dbMinCapacity "${{ parameters.dbMinCapacity }}" -maxSizeBytes "${{ parameters.maxSizeBytes }}" -applicationGatewayCapacity "${{ parameters.applicationGatewayCapacity }}" -keyVaultName "$(keyVaultName)" -keyVaultCertificateName "$(keyVaultCertificateName)" -keyVaultRGName "BakingDP" '
          ${{ elseif eq(parameters.stageName, 'AUSSmallStackShoeSizesw19d150j') }}:
            value: '-virtualMachineSize "${{ parameters.virtualMachineSize }}" -dbVirtualMachineSize "${{ parameters.dbVirtualMachineSize }}" -keyVaultEnabled "${{ parameters.keyVaultEnabled }}" -maxSizeBytes "${{ parameters.maxSizeBytes }}" -applicationGatewayCapacity ${{ parameters.applicationGatewayCapacity }} '
          ${{ elseif eq(parameters.stageName, 'AUSMediumStackShoeSizesw16d150j') }}:
            value: '-virtualMachineSize "${{ parameters.virtualMachineSize }}" -dbVirtualMachineSize "${{ parameters.dbVirtualMachineSize }}" -keyVaultEnabled "${{ parameters.keyVaultEnabled }}" -maxSizeBytes "${{ parameters.maxSizeBytes }}" -enableAutoscaling true -autoScaleMinCapacity ${{ parameters.autoScaleMinCapacity }} -autoScaleMaxCapacity ${{ parameters.autoScaleMaxCapacity }} '
          ${{ elseif eq(parameters.stageName, 'AUSLargeStackShoeSizesw19d142j') }}:
            value: '-virtualMachineSize "${{ parameters.virtualMachineSize }}" -dbVirtualMachineSize "${{ parameters.dbVirtualMachineSize }}" -keyVaultEnabled "${{ parameters.keyVaultEnabled }}" -maxSizeBytes "${{ parameters.maxSizeBytes }}" -enableAutoscaling true -autoScaleMinCapacity "${{ parameters.autoScaleMinCapacity }}" -autoScaleMaxCapacity "${{ parameters.autoScaleMaxCapacity }}" '
          ${{ else }}:
            value: ''

      cancelTimeoutInMinutes: 1
      condition: ${{ parameters.jobcondition}}
      displayName: ${{ parameters.jobDisplayname }}

      pool:
        vmImage: ${{ parameters.vmImage }}

      steps:
        - download: _TemplatesCI
          displayName: Download artefacts from Template CI 3.0

        - download: _BuildImageReleaseArtefacts
          displayName: Download artefacts from Build Image Release Artefacts 3.0

        - checkout: _lansa_azure_quickstart_templates
          path: _lansa_azure_quickstart_templates

        - checkout: self
          path: _robe070_cookbooks

        - task: PowerShell@2
          name: Gate
          displayName: 'Artifact Check: Set Gate Variable'
          inputs:
            targetType: filePath
            filePath: '$(Pipeline.Workspace)/_robe070_cookbooks/scripts/azure_set_gate_variable.ps1'
            arguments: -Version "${{ parameters.version }}" -osName "${{ parameters.osName }}"

        - powershell: |
            # Print the Gate variables. 
            Write-Host "Gate.IsEnabled: $(Gate.IsEnabled); Gate.ImageUrl: $(Gate.ImageUrl) Gate.Sku: $(Gate.Sku)" | Out-Default
          displayName: 'Artifact Check : Output Gate Variable'
          condition: and(succeeded(), eq(lower(variables['Gate.IsEnabled']), 'true'))

        - ${{ if startsWith(lower(parameters.stageDisplayname), 'production') }}:
          - powershell: |
              # This is to replace the main template from the release URL
              Invoke-WebRequest -Uri "$(LansaReleaseTemplateUrl)" -OutFile "$(Pipeline.Workspace)/_TemplatesCI/Solution Template/mainTemplate.json" -verbose
            displayName: 'Download from Azure Quick Start Template'
            condition: and(succeeded(), eq(lower(variables['Gate.IsEnabled']), 'true'))

        - task: AzurePowerShell@5
          displayName: 'Delete Resource Group'
          inputs:
            azureSubscription: $(ConnectedServiceName)
            ScriptType: InlineScript
            Inline: |
              Write-Host "Deleting Resource Group $(ResourceGroup)"
              Remove-AzResourceGroup -Name $(ResourceGroup) -Force -ErrorAction SilentlyContinue
            errorActionPreference: silentlyContinue
            azurePowerShellVersion: LatestVersion
          continueOnError: true
          condition: and(succeeded(), eq(lower(variables['Gate.IsEnabled']), 'true'))

        - task: AzureResourceManagerTemplateDeployment@3
          displayName: 'ARM Template deployment: ${{ parameters.stageDisplayname }}'
          name: sqlazuredeployment
          inputs:
            azureResourceManagerConnection: $(ConnectedServiceName)
            subscriptionId: '739c4e86-bd75-4910-8d6e-d7eb23ab94f3'
            resourceGroupName: '$(ResourceGroup)'
            location: "${{ parameters.location }}"
            csmFile: $(Pipeline.Workspace)/_TemplatesCI/Solution Template/mainTemplate.json
            deploymentName: ${{ parameters.SqlDeploymentName }}
            overrideParameters: -osName "$(Gate.osName)" -lansaVersion "${{ parameters.lansaVersion }}" -imageReleaseState "${{ parameters.imageReleaseState }}" -msiURL "${{ parameters.msiURL }}" -stackName "${{ parameters.stackName }}" -certificateBase64Encoded "$(certificateBase64Encoded)" -certificatePassword "$(certificatePassword)" -databaseNewOrExisting "${{ parameters.databaseNewOrExisting }}" -databaseName "${{ parameters.databaseName }}" -databaseLogin "$(databaseLogin)" -databaseLoginPassword "$(databaseLoginPassword)" -edition "${{ parameters.edition }}" -requestedServiceObjectiveName "${{ parameters.requestedServiceObjectiveName }}" -adminUsername "$(adminUsername)" -adminPassword "$(adminPassword)" -webUsername "$(webUsername)" -webPassword "$(webPassword)" -gitBranch "${{ parameters.gitBranch }}" -agpublicIpSku "${{ parameters.agpublicIpSku }}" -agpublicIpAllocationMethod "${{ parameters.agpublicIpAllocationMethod }}" -applicationGatewaySkuName "${{ parameters.applicationGatewaySkuName }}" -applicationGatewaySkuTier "${{ parameters.applicationGatewaySkuTier }}" $(additionalOverrideParameters) $(CollationJPN)
            deploymentOutputs: deploymentOutput
            addSpnToEnvironment: true
          condition: and(succeeded(), eq(lower(variables['Gate.IsEnabled']), 'true'))

        - powershell: |
            # Print the Deployment Output
            Write-Host "$(deploymentOutput)" | out-default | Write-Verbose
          displayName: 'Print Deployment Output'
          condition: and(succeeded(), eq(lower(variables['Gate.IsEnabled']), 'true'))

        - task: maikvandergaag.maikvandergaag-azurergtag.azurergtag.azurergtag@1
          displayName: 'Azure Resource Group Tagging'
          inputs:
            ConnectedServiceName: $(ConnectedServiceName)
            ResourceGroupName: '$(ResourceGroup)'
            Key: Usage
            Value: 'test-temp'
          continueOnError: true
          condition: and(succeeded(), eq(lower(variables['Gate.IsEnabled']), 'true'))

        - task: PowerShell@2
          displayName: 'Test ARM Deployment: URL Tests'
          inputs:
            targetType: filePath
            filePath: $(Pipeline.Workspace)/_robe070_cookbooks/scripts/azure_url_tests.ps1
            arguments: -deploymentOutput '$(deploymentOutput)' $(LanguageJPN)
          condition: and(succeeded(), eq(lower(variables['Gate.IsEnabled']), 'true'))

        - task: AzurePowerShell@5
          displayName: 'Test Image Version'
          inputs:
            azureSubscription: $(ConnectedServiceName)
            ScriptPath: $(Pipeline.Workspace)/_robe070_cookbooks/scripts/azure_test_image_version.ps1
            ScriptArguments: -SkuName "$(Gate.Sku)" -deploymentOutput '$(deploymentOutput)'
            azurePowerShellVersion: LatestVersion
          condition: and(succeeded(), eq(lower(variables['Gate.IsEnabled']), 'true'))

        - task: AzureResourceManagerTemplateDeployment@3
          displayName: Delete Resource Group
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: $(ConnectedServiceName)
            subscriptionId: '739c4e86-bd75-4910-8d6e-d7eb23ab94f3'
            action: 'DeleteRG'
            resourceGroupName: $(ResourceGroup)
          continueOnError: true
          condition: and(succeeded(), eq(lower(variables['Gate.IsEnabled']), 'true'))
